Binary Palindrome
Golu is a student who loves magical numbers. A number 
X
X is magical if binary representation of 
X
X is palindromic. He used to think of magical numbers all the time. Suddenly, he asked his friend Molu whether he can find 
N
t
h
Nth magical number. Thinking for a while, Molu said 'yes'. Help Molu to find the 
N
t
h
Nth magical number.

Note: Binary representation of magical number must not contain any leading zeroes.

Input

First line contain number of test cases 
T
T.
The follwing 
T
T lines consist of an integer 
N
N.
Output

Print 
N
t
h
Nth magical number.
Constraints

1
≤
≤
T
T 
≤
≤106

1
≤
≤
N
N
≤
≤109

Sample Input(Plaintext Link)

Sample Output(Plaintext Link)
1
5
9
Explanation
The 1st magical number is 1, because its binary representation is "1".
The 2nd magical number is 3, because its binary representation is "11".
The integer 2 is not a magical number because its binary representation is "10", which is not a palindrome.


Time Limit: 1.0 sec(s) for each input file
Memory Limit: 256 MB
Source Limit: 1024 KB
Marking Scheme: Marks are awarded if any testcase passes
Allowed Languages: C, C++, Clojure, C#, Go, Haskell, Java, JavaScript(Rhino), Objective-C, Perl, PHP, Python, Ruby

// Use for input
public class SafeNetwork {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line = br.readLine();
        int N = Integer.parseInt(line);

        Scanner s = new Scanner(System.in);
        int N = s.nextInt();
    }
}